---
import { type CollectionEntry, getCollection } from 'astro:content'

import { ExternalLink, GraduationCap, School } from 'lucide-astro'
import { format } from 'date-fns'

import Event from '../event/index.astro'

interface Props {
    entry: CollectionEntry<'organisations'>
}

const { entry } = Astro.props

const events = (
    await getCollection('events', ({ data }) => {
        return data.organisationId === entry.data.id
    })
).sort(function (a, b) {
    if (a.data.dateFrom && b.data.dateFrom) {
        return b.data.dateFrom.getTime() - a.data.dateFrom.getTime()
    } else {
        return 0
    }
})
---

<div class="my-8 flex space-x-4">
    <div class="grid h-8 w-8 flex-none justify-center">
        <School class="h-8 w-8" />
    </div>
    <div class="m-h-8 grow">
        <h3 class="font-sans text-xl font-semibold antialiased">
            <a class="space-x-1" href={entry.data.uri} target="_blank">
                <span class="hover:underline">{entry.data.name}</span>
                <ExternalLink class="inline h-4 w-4" />
            </a>
        </h3>
    </div>
</div>
<ul>
    {
        events.map((event) => (
            <Event title={event.data.title} uri={event.data.uri}>
                <GraduationCap slot="icon" />
                <p slot="description">
                    {event.data.dateFrom && format(event.data.dateFrom, 'yyyy')} -{' '}
                    {event.data.dateTo && format(event.data.dateTo, 'yyyy')}
                </p>
            </Event>
        ))
    }
</ul>
